************* Module mlxtend
mlxtend/mlxtend/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.evaluate.confusion_matrix
mlxtend/mlxtend/evaluate/confusion_matrix.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/confusion_matrix.py:52:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
************* Module mlxtend.evaluate.feature_importance
mlxtend/mlxtend/evaluate/feature_importance.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/feature_importance.py:13:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/feature_importance.py:12:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/feature_importance.py:12:0: R0914: Too many local variables (20/15) (too-many-locals)
mlxtend/mlxtend/evaluate/feature_importance.py:97:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/feature_importance.py:12:0: R0912: Too many branches (15/12) (too-many-branches)
************* Module mlxtend.evaluate.cochrans_q
mlxtend/mlxtend/evaluate/cochrans_q.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/cochrans_q.py:14:0: R0914: Too many local variables (19/15) (too-many-locals)
mlxtend/mlxtend/evaluate/cochrans_q.py:53:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/cochrans_q.py:71:21: R1728: Consider using a generator instead 'sum(c**2 for c in correctly_classified_collection)' (consider-using-generator)
************* Module mlxtend.evaluate.time_series
mlxtend/mlxtend/evaluate/time_series.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/time_series.py:17:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
mlxtend/mlxtend/evaluate/time_series.py:41:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/time_series.py:66:20: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:66:4: R0914: Too many local variables (21/15) (too-many-locals)
mlxtend/mlxtend/evaluate/time_series.py:149:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:149:27: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/evaluate/time_series.py:149:35: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/time_series.py:149:43: W0613: Unused argument 'groups' (unused-argument)
mlxtend/mlxtend/evaluate/time_series.py:104:8: W0201: Attribute '_n_groups' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/evaluate/time_series.py:327:4: W0201: Attribute '_n_groups' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/evaluate/time_series.py:234:8: W0201: Attribute '_train_start_idx' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/evaluate/time_series.py:237:21: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:237:24: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/time_series.py:256:36: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:256:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/time_series.py:256:0: R0914: Too many local variables (18/15) (too-many-locals)
mlxtend/mlxtend/evaluate/time_series.py:259:16: E1101: Module 'matplotlib.cm' has no 'tab20' member (no-member)
mlxtend/mlxtend/evaluate/time_series.py:260:14: E1101: Module 'matplotlib.cm' has no 'coolwarm' member (no-member)
mlxtend/mlxtend/evaluate/time_series.py:285:9: W0631: Using possibly undefined loop variable 'split_idx' (undefined-loop-variable)
mlxtend/mlxtend/evaluate/time_series.py:309:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/time_series.py:258:4: W0612: Unused variable 'fig' (unused-variable)
mlxtend/mlxtend/evaluate/time_series.py:324:16: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:327:4: W0212: Access to a protected member _n_groups of a client class (protected-access)
mlxtend/mlxtend/evaluate/time_series.py:328:4: W0212: Access to a protected member _calculate_split_params of a client class (protected-access)
mlxtend/mlxtend/evaluate/time_series.py:336:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/time_series.py:336:0: R0913: Too many arguments (6/5) (too-many-arguments)
************* Module mlxtend.evaluate.scoring
mlxtend/mlxtend/evaluate/scoring.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/scoring.py:26:0: R0914: Too many local variables (16/15) (too-many-locals)
mlxtend/mlxtend/evaluate/scoring.py:93:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/scoring.py:97:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/scoring.py:26:0: R0912: Too many branches (20/12) (too-many-branches)
************* Module mlxtend.evaluate.f_test
mlxtend/mlxtend/evaluate/f_test.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/f_test.py:16:0: R0914: Too many local variables (28/15) (too-many-locals)
mlxtend/mlxtend/evaluate/f_test.py:55:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/f_test.py:77:23: R1728: Consider using a generator instead 'sum(acc**2 for acc in accuracies)' (consider-using-generator)
mlxtend/mlxtend/evaluate/f_test.py:117:49: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/f_test.py:117:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/f_test.py:117:0: R0914: Too many local variables (25/15) (too-many-locals)
mlxtend/mlxtend/evaluate/f_test.py:169:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/f_test.py:172:11: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/f_test.py:174:13: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/f_test.py:177:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/f_test.py:186:19: C0103: Argument name "X_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/f_test.py:186:24: C0103: Argument name "X_2" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/f_test.py:196:8: C0103: Variable name "X_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/f_test.py:196:13: C0103: Variable name "X_2" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/f_test.py:199:23: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
mlxtend/mlxtend/evaluate/f_test.py:194:8: W0612: Unused variable 'i' (unused-variable)
************* Module mlxtend.evaluate.lift_score
mlxtend/mlxtend/evaluate/lift_score.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/lift_score.py:60:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/lift_score.py:71:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/lift_score.py:95:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module mlxtend.evaluate.proportion_difference
mlxtend/mlxtend/evaluate/proportion_difference.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.evaluate
mlxtend/mlxtend/evaluate/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.evaluate.mcnemar
mlxtend/mlxtend/evaluate/mcnemar.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/mcnemar.py:48:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/mcnemar.py:53:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/mcnemar.py:136:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/mcnemar.py:158:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.evaluate.bootstrap
mlxtend/mlxtend/evaluate/bootstrap.py:117:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
mlxtend/mlxtend/evaluate/bootstrap.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/bootstrap.py:12:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/bootstrap.py:12:0: R0914: Too many local variables (19/15) (too-many-locals)
mlxtend/mlxtend/evaluate/bootstrap.py:90:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
************* Module mlxtend.evaluate.counterfactual
mlxtend/mlxtend/evaluate/counterfactual.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/counterfactual.py:18:4: C0103: Argument name "X_dataset" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/counterfactual.py:14:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/counterfactual.py:91:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
************* Module mlxtend.evaluate.holdout
mlxtend/mlxtend/evaluate/holdout.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/holdout.py:13:0: R0205: Class 'RandomHoldoutSplit' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/evaluate/holdout.py:45:20: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/holdout.py:45:26: W0613: Unused argument 'groups' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:90:12: W0612: Unused variable 'i' (unused-variable)
mlxtend/mlxtend/evaluate/holdout.py:93:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/holdout.py:93:27: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:93:35: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:93:43: W0613: Unused argument 'groups' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:116:0: R0205: Class 'PredefinedHoldoutSplit' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/evaluate/holdout.py:141:20: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/holdout.py:141:23: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:141:26: W0613: Unused argument 'groups' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:171:12: W0612: Unused variable 'i' (unused-variable)
mlxtend/mlxtend/evaluate/holdout.py:174:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/holdout.py:174:27: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:174:35: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/holdout.py:174:43: W0613: Unused argument 'groups' (unused-argument)
************* Module mlxtend.evaluate.ttest
mlxtend/mlxtend/evaluate/ttest.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/ttest.py:17:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:14:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/ttest.py:14:0: R0914: Too many local variables (24/15) (too-many-locals)
mlxtend/mlxtend/evaluate/ttest.py:87:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/ttest.py:90:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/ttest.py:93:11: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:95:13: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:98:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/ttest.py:108:8: C0103: Variable name "X_train" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:108:17: C0103: Variable name "X_test" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:123:8: R1728: Consider using a generator instead 'sum((diff - avg_diff)**2 for diff in score_diff)' (consider-using-generator)
mlxtend/mlxtend/evaluate/ttest.py:105:8: W0612: Unused variable 'i' (unused-variable)
mlxtend/mlxtend/evaluate/ttest.py:132:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:131:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/ttest.py:131:0: R0914: Too many local variables (24/15) (too-many-locals)
mlxtend/mlxtend/evaluate/ttest.py:201:11: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:203:13: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:206:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/ttest.py:215:8: C0103: Variable name "X_train" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:215:17: C0103: Variable name "X_test" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:229:8: R1728: Consider using a generator instead 'sum((diff - avg_diff)**2 for diff in score_diff)' (consider-using-generator)
mlxtend/mlxtend/evaluate/ttest.py:237:47: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:237:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/ttest.py:237:0: R0914: Too many local variables (25/15) (too-many-locals)
mlxtend/mlxtend/evaluate/ttest.py:289:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/ttest.py:292:11: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:294:13: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/ttest.py:297:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/ttest.py:306:19: C0103: Argument name "X_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:306:24: C0103: Argument name "X_2" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:316:8: C0103: Variable name "X_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:316:13: C0103: Variable name "X_2" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/ttest.py:319:23: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
mlxtend/mlxtend/evaluate/ttest.py:314:8: W0612: Unused variable 'i' (unused-variable)
************* Module mlxtend.evaluate.bootstrap_point632
mlxtend/mlxtend/evaluate/bootstrap_point632.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:17:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:27:12: W0707: Consider explicitly re-raising using 'except AttributeError as exc' and 'raise ValueError('y must be a 1D array.') from exc' (raise-missing-from)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:30:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:33:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:38:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:42:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:48:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:46:0: R0913: Too many arguments (9/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:46:0: R0914: Too many local variables (28/15) (too-many-locals)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:158:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:164:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:181:11: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:183:13: W0212: Access to a protected member _estimator_type of a client class (protected-access)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:187:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:255:16: C0103: Variable name "R" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:46:0: R0912: Too many branches (21/12) (too-many-branches)
mlxtend/mlxtend/evaluate/bootstrap_point632.py:46:0: R0915: Too many statements (55/50) (too-many-statements)
************* Module mlxtend.evaluate.bootstrap_outofbag
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:12:0: R0205: Class 'BootstrapOutOfBag' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:48:20: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:61:14: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:48:23: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:48:31: W0613: Unused argument 'groups' (unused-argument)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:70:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:70:27: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:70:35: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/evaluate/bootstrap_outofbag.py:70:43: W0613: Unused argument 'groups' (unused-argument)
************* Module mlxtend.evaluate.permutation
mlxtend/mlxtend/evaluate/permutation.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/permutation.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/evaluate/permutation.py:25:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/permutation.py:25:0: R0914: Too many local variables (21/15) (too-many-locals)
mlxtend/mlxtend/evaluate/permutation.py:90:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/evaluate/permutation.py:94:8: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
mlxtend/mlxtend/evaluate/permutation.py:104:12: E0102: function already defined line 28 (function-redefined)
mlxtend/mlxtend/evaluate/permutation.py:109:12: E0102: function already defined line 28 (function-redefined)
mlxtend/mlxtend/evaluate/permutation.py:114:12: E0102: function already defined line 28 (function-redefined)
mlxtend/mlxtend/evaluate/permutation.py:117:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/permutation.py:123:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/permutation.py:25:0: R0912: Too many branches (28/12) (too-many-branches)
mlxtend/mlxtend/evaluate/permutation.py:25:0: R0915: Too many statements (54/50) (too-many-statements)
************* Module mlxtend.evaluate.accuracy
mlxtend/mlxtend/evaluate/accuracy.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/accuracy.py:11:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/evaluate/accuracy.py:61:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/evaluate/accuracy.py:63:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/evaluate/accuracy.py:75:15: R1728: Consider using a generator instead 'sum(_compute_metric(np.where(target_temp != lab, 1, 0), np.where(predicted_temp != lab, 1, 0)) for lab in unique_labels)' (consider-using-generator)
mlxtend/mlxtend/evaluate/accuracy.py:96:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.evaluate.bias_variance_decomp
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:11:32: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:21:4: C0103: Argument name "X_train" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:23:4: C0103: Argument name "X_test" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:19:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:19:0: R0914: Too many local variables (29/15) (too-many-locals)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:96:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:103:61: E0606: Possibly using variable 'dtype' before assignment (possibly-used-before-assignment)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:106:8: C0103: Variable name "X_boot" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:19:0: R0912: Too many branches (13/12) (too-many-branches)
mlxtend/mlxtend/evaluate/bias_variance_decomp.py:111:20: W0612: Unused variable 'layer' (unused-variable)
************* Module mlxtend.math
mlxtend/mlxtend/math/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.math.linalg
mlxtend/mlxtend/math/linalg.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.math.counting
mlxtend/mlxtend/math/counting.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/math/counting.py:10:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/math/counting.py:11:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module mlxtend.file_io.find_files
mlxtend/mlxtend/file_io/find_files.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/file_io/find_files.py:12:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/file_io/find_files.py:62:17: W0612: Unused variable 'nxt' (unused-variable)
************* Module mlxtend.file_io.find_filegroups
mlxtend/mlxtend/file_io/find_filegroups.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/file_io/find_filegroups.py:15:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/file_io/find_filegroups.py:15:0: R0914: Too many local variables (17/15) (too-many-locals)
mlxtend/mlxtend/file_io/find_filegroups.py:95:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/file_io/find_filegroups.py:104:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/file_io/find_filegroups.py:112:0: C0206: Consider iterating with .items() (consider-using-dict-items)
mlxtend/mlxtend/file_io/find_filegroups.py:112:40: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
************* Module mlxtend.file_io
mlxtend/mlxtend/file_io/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend._base._cluster
mlxtend/mlxtend/_base/_cluster.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_cluster.py:14:0: R0205: Class '_Cluster' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_cluster.py:18:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_cluster.py:37:8: E1101: Instance of '_Cluster' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_cluster.py:38:49: E1101: Instance of '_Cluster' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_cluster.py:39:25: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_cluster.py:39:47: E1101: Instance of '_Cluster' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_cluster.py:41:8: E1101: Instance of '_Cluster' has no '_fit' member; maybe 'fit'? (no-member)
mlxtend/mlxtend/_base/_cluster.py:45:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_cluster.py:60:8: E1101: Instance of '_Cluster' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_cluster.py:63:15: E1101: Instance of '_Cluster' has no '_predict' member; maybe 'predict'? (no-member)
mlxtend/mlxtend/_base/_cluster.py:36:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_cluster.py:42:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_cluster.py:39:12: W0201: Attribute '_rgen' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_cluster.py:40:8: W0201: Attribute '_init_time' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend._base._multiclass
mlxtend/mlxtend/_base/_multiclass.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_multiclass.py:12:0: R0205: Class '_MultiClass' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_multiclass.py:12:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module mlxtend._base
mlxtend/mlxtend/_base/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend._base._classifier
mlxtend/mlxtend/_base/_classifier.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_classifier.py:14:0: R0205: Class '_Classifier' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_classifier.py:20:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_classifier.py:24:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_classifier.py:30:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_classifier.py:33:20: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_classifier.py:55:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_classifier.py:76:8: E1101: Instance of '_Classifier' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_classifier.py:78:49: E1101: Instance of '_Classifier' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_classifier.py:79:25: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_classifier.py:79:47: E1101: Instance of '_Classifier' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_classifier.py:81:8: E1101: Instance of '_Classifier' has no '_fit' member; maybe 'fit'? (no-member)
mlxtend/mlxtend/_base/_classifier.py:85:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_classifier.py:100:8: E1101: Instance of '_Classifier' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_classifier.py:103:15: E1101: Instance of '_Classifier' has no '_predict' member; maybe 'predict'? (no-member)
mlxtend/mlxtend/_base/_classifier.py:75:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_classifier.py:82:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_classifier.py:79:12: W0201: Attribute '_rgen' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_classifier.py:80:8: W0201: Attribute '_init_time' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend._base._iterative_model
mlxtend/mlxtend/_base/_iterative_model.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_iterative_model.py:15:0: R0205: Class '_IterativeModel' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_iterative_model.py:25:11: E1101: Instance of '_IterativeModel' has no 'print_progress' member; maybe '_print_progress'? (no-member)
mlxtend/mlxtend/_base/_iterative_model.py:26:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_iterative_model.py:28:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_iterative_model.py:29:15: E1101: Instance of '_IterativeModel' has no 'print_progress' member; maybe '_print_progress'? (no-member)
mlxtend/mlxtend/_base/_iterative_model.py:33:39: E1101: Instance of '_IterativeModel' has no '_init_time' member (no-member)
mlxtend/mlxtend/_base/_iterative_model.py:35:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_iterative_model.py:36:19: E1101: Instance of '_IterativeModel' has no 'print_progress' member; maybe '_print_progress'? (no-member)
mlxtend/mlxtend/_base/_iterative_model.py:41:24: R1731: Consider using 'eta_sec = max(eta_sec, 0.0)' instead of unnecessary if block (consider-using-max-builtin)
mlxtend/mlxtend/_base/_iterative_model.py:44:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_iterative_model.py:51:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_iterative_model.py:70:8: R1737: Use 'yield from' directly instead of yielding each element one by one (use-yield-from)
mlxtend/mlxtend/_base/_iterative_model.py:73:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/_base/_iterative_model.py:83:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_iterative_model.py:31:20: W0201: Attribute 'ela_str_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_iterative_model.py:34:20: W0201: Attribute 'ela_str_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_iterative_model.py:38:24: W0201: Attribute 'eta_str_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_iterative_model.py:43:24: W0201: Attribute 'eta_str_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_iterative_model.py:15:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module mlxtend._base._multilayer
mlxtend/mlxtend/_base/_multilayer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_multilayer.py:12:0: R0205: Class '_MultiLayer' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_multilayer.py:41:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_multilayer.py:54:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_multilayer.py:56:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_multilayer.py:60:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_multilayer.py:63:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_multilayer.py:12:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module mlxtend._base._regressor
mlxtend/mlxtend/_base/_regressor.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_regressor.py:14:0: R0205: Class '_Regressor' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_regressor.py:20:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_regressor.py:18:37: W0613: Unused argument 'allowed' (unused-argument)
mlxtend/mlxtend/_base/_regressor.py:22:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_regressor.py:43:8: E1101: Instance of '_Regressor' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_regressor.py:45:49: E1101: Instance of '_Regressor' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_regressor.py:46:25: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/_base/_regressor.py:46:47: E1101: Instance of '_Regressor' has no 'random_seed' member (no-member)
mlxtend/mlxtend/_base/_regressor.py:48:8: E1101: Instance of '_Regressor' has no '_fit' member; maybe 'fit'? (no-member)
mlxtend/mlxtend/_base/_regressor.py:52:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_regressor.py:67:8: E1101: Instance of '_Regressor' has no '_check_arrays' member (no-member)
mlxtend/mlxtend/_base/_regressor.py:70:15: E1101: Instance of '_Regressor' has no '_predict' member; maybe 'predict'? (no-member)
mlxtend/mlxtend/_base/_regressor.py:42:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_regressor.py:49:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_regressor.py:46:12: W0201: Attribute '_rgen' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/_base/_regressor.py:47:8: W0201: Attribute '_init_time' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend._base._base_model
mlxtend/mlxtend/_base/_base_model.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/_base/_base_model.py:18:0: R0205: Class '_BaseModel' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/_base/_base_model.py:22:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/_base/_base_model.py:32:16: W0707: Consider explicitly re-raising using 'except AttributeError as exc' and 'raise ValueError('y must be a 1D array.') from exc' (raise-missing-from)
mlxtend/mlxtend/_base/_base_model.py:68:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/_base/_base_model.py:97:14: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)
mlxtend/mlxtend/_base/_base_model.py:133:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.frequent_patterns.fpcommon
mlxtend/mlxtend/frequent_patterns/fpcommon.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:11:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:64:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:81:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:128:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:134:0: C0115: Missing class docstring (missing-class-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:134:0: R0205: Class 'FPTree' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:215:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:223:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:229:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:234:0: C0115: Missing class docstring (missing-class-docstring)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:234:0: R0205: Class 'FPNode' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/frequent_patterns/fpcommon.py:234:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module mlxtend.frequent_patterns.apriori
mlxtend/mlxtend/frequent_patterns/apriori.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/apriori.py:55:59: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/apriori.py:55:0: R0914: Too many local variables (17/15) (too-many-locals)
mlxtend/mlxtend/frequent_patterns/apriori.py:122:12: C0103: Variable name "X_cols" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/apriori.py:134:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/frequent_patterns/apriori.py:134:0: R0914: Too many local variables (27/15) (too-many-locals)
mlxtend/mlxtend/frequent_patterns/apriori.py:236:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/apriori.py:246:12: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/apriori.py:248:12: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/apriori.py:252:8: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/apriori.py:282:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/apriori.py:299:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/apriori.py:332:18: R1721: Unnecessary use of a comprehension, use dict(enumerate(df.columns)) instead. (unnecessary-comprehension)
mlxtend/mlxtend/frequent_patterns/apriori.py:134:0: R0912: Too many branches (20/12) (too-many-branches)
mlxtend/mlxtend/frequent_patterns/apriori.py:134:0: R0915: Too many statements (67/50) (too-many-statements)
************* Module mlxtend.frequent_patterns.fpmax
mlxtend/mlxtend/frequent_patterns/fpmax.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/fpmax.py:79:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/fpmax.py:86:22: R1721: Unnecessary use of a comprehension, use dict(enumerate(df.columns)) instead. (unnecessary-comprehension)
mlxtend/mlxtend/frequent_patterns/fpmax.py:96:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/frequent_patterns/fpmax.py:96:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/frequent_patterns/fpmax.py:111:30: R1728: Consider using a generator instead 'min(tree.nodes[i][0].count for i in items)' (consider-using-generator)
mlxtend/mlxtend/frequent_patterns/fpmax.py:132:0: C0115: Missing class docstring (missing-class-docstring)
mlxtend/mlxtend/frequent_patterns/fpmax.py:132:0: R0205: Class 'MFITree' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/frequent_patterns/fpmax.py:198:4: C0115: Missing class docstring (missing-class-docstring)
mlxtend/mlxtend/frequent_patterns/fpmax.py:198:4: R0205: Class 'Node' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/frequent_patterns/fpmax.py:199:33: W0613: Unused argument 'count' (unused-argument)
mlxtend/mlxtend/frequent_patterns/fpmax.py:198:4: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module mlxtend.frequent_patterns.hmine
mlxtend/mlxtend/frequent_patterns/hmine.py:25:0: C0301: Line too long (101/100) (line-too-long)
mlxtend/mlxtend/frequent_patterns/hmine.py:211:0: C0301: Line too long (104/100) (line-too-long)
mlxtend/mlxtend/frequent_patterns/hmine.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/hmine.py:14:0: R0914: Too many local variables (17/15) (too-many-locals)
mlxtend/mlxtend/frequent_patterns/hmine.py:82:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/hmine.py:101:8: W0104: Statement seems to have no effect (pointless-statement)
mlxtend/mlxtend/frequent_patterns/hmine.py:170:0: R0913: Too many arguments (8/5) (too-many-arguments)
************* Module mlxtend.frequent_patterns
mlxtend/mlxtend/frequent_patterns/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.frequent_patterns.association_rules
mlxtend/mlxtend/frequent_patterns/association_rules.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/association_rules.py:31:0: W0102: Dangerous default value _metrics (builtins.list) as argument (dangerous-default-value)
mlxtend/mlxtend/frequent_patterns/association_rules.py:31:0: R0914: Too many local variables (31/15) (too-many-locals)
mlxtend/mlxtend/frequent_patterns/association_rules.py:104:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/frequent_patterns/association_rules.py:114:26: C0103: Argument name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:114:31: C0103: Argument name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:114:35: C0103: Argument name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:115:8: C0103: Variable name "conf_AC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:116:8: C0103: Variable name "conf_CA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:120:26: C0103: Argument name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:120:31: C0103: Argument name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:120:35: C0103: Argument name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:123:11: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
mlxtend/mlxtend/frequent_patterns/association_rules.py:136:29: C0103: Argument name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:136:34: C0103: Argument name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:136:38: C0103: Argument name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:146:30: C0103: Argument name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:146:35: C0103: Argument name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:146:39: C0103: Argument name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:153:32: C0103: Argument name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:153:37: C0103: Argument name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:153:41: C0103: Argument name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:168:22: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:169:25: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:170:19: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:171:21: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:172:22: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:179:25: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
mlxtend/mlxtend/frequent_patterns/association_rules.py:181:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/association_rules.py:187:34: W0108: Lambda may not be necessary (unnecessary-lambda)
mlxtend/mlxtend/frequent_patterns/association_rules.py:196:4: C0206: Consider iterating with .items() (consider-using-dict-items)
mlxtend/mlxtend/frequent_patterns/association_rules.py:197:8: C0103: Variable name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:208:20: C0103: Variable name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:209:20: C0103: Variable name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:213:24: C0103: Variable name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:214:24: C0103: Variable name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:224:24: W0707: Consider explicitly re-raising using 'raise KeyError(s) from e' (raise-missing-from)
mlxtend/mlxtend/frequent_patterns/association_rules.py:234:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/frequent_patterns/association_rules.py:246:12: C0103: Variable name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:252:12: C0103: Variable name "sAC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:253:12: C0103: Variable name "sA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:254:12: C0103: Variable name "sC" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/frequent_patterns/association_rules.py:31:0: R0912: Too many branches (17/12) (too-many-branches)
mlxtend/mlxtend/frequent_patterns/association_rules.py:31:0: R0915: Too many statements (71/50) (too-many-statements)
************* Module mlxtend.frequent_patterns.fpgrowth
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:20:0: C0301: Line too long (101/100) (line-too-long)
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:77:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:84:22: R1721: Unnecessary use of a comprehension, use dict(enumerate(df.columns)) instead. (unnecessary-comprehension)
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:118:26: R1728: Consider using a generator instead 'min(tree.nodes[i][0].count for i in itemset)' (consider-using-generator)
mlxtend/mlxtend/frequent_patterns/fpgrowth.py:123:22: R1728: Consider using a generator instead 'sum(node.count for node in tree.nodes[item])' (consider-using-generator)
************* Module mlxtend.regressor.stacking_cv_regression
mlxtend/mlxtend/regressor/stacking_cv_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:28:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:28:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:125:4: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:153:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:213:25: R1735: Consider using '{"sample_weight": sample_weight}' instead of a call to 'dict'. (use-dict-literal)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:153:4: R0912: Too many branches (14/12) (too-many-branches)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:257:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:281:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:288:36: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:182:12: W0201: Attribute 'regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:185:12: W0201: Attribute 'regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:183:12: W0201: Attribute 'meta_regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:186:12: W0201: Attribute 'meta_regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_cv_regression.py:233:12: W0201: Attribute 'train_meta_features_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.regressor
mlxtend/mlxtend/regressor/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.regressor.stacking_regression
mlxtend/mlxtend/regressor/stacking_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/regressor/stacking_regression.py:12:0: R0402: Use 'from scipy import sparse' instead (consider-using-from-import)
mlxtend/mlxtend/regressor/stacking_regression.py:21:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
mlxtend/mlxtend/regressor/stacking_regression.py:21:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
mlxtend/mlxtend/regressor/stacking_regression.py:96:4: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/regressor/stacking_regression.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/regressor/stacking_regression.py:118:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_regression.py:158:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/regressor/stacking_regression.py:164:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/regressor/stacking_regression.py:118:4: R0912: Too many branches (16/12) (too-many-branches)
mlxtend/mlxtend/regressor/stacking_regression.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/regressor/stacking_regression.py:205:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/regressor/stacking_regression.py:224:36: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_regression.py:245:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/stacking_regression.py:262:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/regressor/stacking_regression.py:151:12: W0201: Attribute 'regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_regression.py:154:12: W0201: Attribute 'regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_regression.py:152:12: W0201: Attribute 'meta_regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_regression.py:155:12: W0201: Attribute 'meta_regr_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/stacking_regression.py:197:12: W0201: Attribute 'train_meta_features_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.regressor.linear_regression
mlxtend/mlxtend/regressor/linear_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/regressor/linear_regression.py:16:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
mlxtend/mlxtend/regressor/linear_regression.py:69:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/regressor/linear_regression.py:92:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/regressor/linear_regression.py:101:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/regressor/linear_regression.py:104:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:119:19: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/regressor/linear_regression.py:137:12: C0103: Variable name "Xb" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:138:12: C0103: Variable name "Q" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:138:15: C0103: Variable name "R" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:144:12: C0103: Variable name "Xb" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:151:31: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:153:8: C0103: Variable name "Xb" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:160:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:164:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/regressor/linear_regression.py:106:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:115:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:140:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:146:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:106:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:115:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:141:12: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:147:12: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:111:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/regressor/linear_regression.py:118:12: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.preprocessing.mean_centering
mlxtend/mlxtend/preprocessing/mean_centering.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/mean_centering.py:12:0: R0205: Class 'MeanCenterer' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/preprocessing/mean_centering.py:31:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:48:8: C0103: Variable name "X_tr" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:49:8: C0103: Variable name "X_tr" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:54:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:70:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:87:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:89:12: C0103: Variable name "X_fl" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:91:12: C0103: Variable name "X_fl" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/mean_centering.py:67:8: W0201: Attribute 'col_means' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.preprocessing.shuffle
mlxtend/mlxtend/preprocessing/shuffle.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/shuffle.py:50:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/shuffle.py:92:8: C0103: Variable name "X_ary" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/shuffle.py:96:8: C0103: Variable name "X_ary" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/shuffle.py:100:4: C0103: Variable name "X_train" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/shuffle.py:101:4: C0103: Variable name "X_test" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.preprocessing.dense_transformer
mlxtend/mlxtend/preprocessing/dense_transformer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/dense_transformer.py:27:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/dense_transformer.py:42:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/preprocessing/dense_transformer.py:27:27: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/preprocessing/dense_transformer.py:49:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/dense_transformer.py:49:18: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/preprocessing/dense_transformer.py:49:21: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/preprocessing/dense_transformer.py:67:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.preprocessing.transactionencoder
mlxtend/mlxtend/preprocessing/transactionencoder.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/transactionencoder.py:35:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/transactionencoder.py:67:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/transactionencoder.py:182:4: W0237: Parameter 'y' has been renamed to 'sparse' in overriding 'TransactionEncoder.fit_transform' method (arguments-renamed)
mlxtend/mlxtend/preprocessing/transactionencoder.py:182:4: W0221: Variadics removed in overriding 'TransactionEncoder.fit_transform' method (arguments-differ)
mlxtend/mlxtend/preprocessing/transactionencoder.py:60:8: W0201: Attribute 'columns_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/preprocessing/transactionencoder.py:64:8: W0201: Attribute 'columns_mapping_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.preprocessing
mlxtend/mlxtend/preprocessing/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.preprocessing.copy_transformer
mlxtend/mlxtend/preprocessing/copy_transformer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/copy_transformer.py:25:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/copy_transformer.py:40:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/preprocessing/copy_transformer.py:46:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/preprocessing/copy_transformer.py:25:27: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/preprocessing/copy_transformer.py:50:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/copy_transformer.py:50:31: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/preprocessing/copy_transformer.py:67:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/preprocessing/copy_transformer.py:67:18: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/preprocessing/copy_transformer.py:67:21: W0613: Unused argument 'y' (unused-argument)
************* Module mlxtend.preprocessing.scaling
mlxtend/mlxtend/preprocessing/scaling.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/preprocessing/scaling.py:47:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/preprocessing/scaling.py:53:7: C0117: Consider changing "not min_val == 0" to "min_val != 0" (unnecessary-negation)
mlxtend/mlxtend/preprocessing/scaling.py:53:28: C0117: Consider changing "not max_val == 1" to "max_val != 1" (unnecessary-negation)
mlxtend/mlxtend/preprocessing/scaling.py:116:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/preprocessing/scaling.py:136:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module mlxtend.preprocessing.onehot
mlxtend/mlxtend/preprocessing/onehot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.cluster
mlxtend/mlxtend/cluster/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.cluster.kmeans
mlxtend/mlxtend/cluster/kmeans.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/cluster/kmeans.py:17:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
mlxtend/mlxtend/cluster/kmeans.py:62:4: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/cluster/kmeans.py:80:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/cluster/kmeans.py:91:19: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/cluster/kmeans.py:113:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
mlxtend/mlxtend/cluster/kmeans.py:130:31: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/cluster/kmeans.py:130:34: W0613: Unused argument 'centroids' (unused-argument)
mlxtend/mlxtend/cluster/kmeans.py:131:12: W0612: Unused variable 'sample_idx' (unused-variable)
mlxtend/mlxtend/cluster/kmeans.py:137:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/cluster/kmeans.py:144:12: R1721: Unnecessary use of a comprehension, use list(self._get_cluster_idx(X=X, centroids=self.centroids_)) instead. (unnecessary-comprehension)
mlxtend/mlxtend/cluster/kmeans.py:89:12: W0201: Attribute 'iterations_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/cluster/kmeans.py:93:12: W0201: Attribute 'centroids_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/cluster/kmeans.py:122:16: W0201: Attribute 'centroids_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/cluster/kmeans.py:97:12: W0201: Attribute 'clusters_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.utils
mlxtend/mlxtend/utils/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.utils.counter
mlxtend/mlxtend/utils/counter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/utils/counter.py:13:0: R0205: Class 'Counter' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/utils/counter.py:65:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/counter.py:73:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/counter.py:86:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/counter.py:91:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/counter.py:84:8: W0201: Attribute 'end_time' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/utils/counter.py:13:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module mlxtend.utils.checking
mlxtend/mlxtend/utils/checking.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/utils/checking.py:12:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/utils/checking.py:12:0: C0103: Function name "check_Xy" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/utils/checking.py:12:13: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/utils/checking.py:15:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:17:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:21:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:26:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:30:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:32:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:37:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/checking.py:12:19: W0613: Unused argument 'y_int' (unused-argument)
mlxtend/mlxtend/utils/checking.py:66:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.utils.base_compostion
mlxtend/mlxtend/utils/base_compostion.py:6:0: W0223: Method '__init__' is abstract in class '_BaseComposition' but is not overridden in child class '_BaseXComposition' (abstract-method)
mlxtend/mlxtend/utils/base_compostion.py:11:4: W0221: Number of parameters was 3 in '_BaseComposition._set_params' and is now 4 in overriding '_BaseXComposition._set_params' method (arguments-differ)
mlxtend/mlxtend/utils/base_compostion.py:39:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
************* Module mlxtend.utils.testing
mlxtend/mlxtend/utils/testing.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/utils/testing.py:30:12: W0707: Consider explicitly re-raising using 'raise AssertionError('Error message differs from the expected string: %r. Got error message: %r' % (message, error_message)) from e' (raise-missing-from)
mlxtend/mlxtend/utils/testing.py:31:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/utils/testing.py:35:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.externals.name_estimators
mlxtend/mlxtend/externals/name_estimators.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/externals/name_estimators.py:28:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.externals.signature_py27
mlxtend/mlxtend/externals/signature_py27.py:30:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:39:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/signature_py27.py:38:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
mlxtend/mlxtend/externals/signature_py27.py:58:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:64:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/signature_py27.py:105:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:106:12: W0707: Consider explicitly re-raising using 'except TypeError as exc' and 'raise ValueError(msg) from exc' (raise-missing-from)
mlxtend/mlxtend/externals/signature_py27.py:134:24: W0212: Access to a protected member _partial_kwarg of a client class (protected-access)
mlxtend/mlxtend/externals/signature_py27.py:175:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:178:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:54:0: R0911: Too many return statements (8/6) (too-many-return-statements)
mlxtend/mlxtend/externals/signature_py27.py:54:0: R0912: Too many branches (27/12) (too-many-branches)
mlxtend/mlxtend/externals/signature_py27.py:54:0: R0915: Too many statements (59/50) (too-many-statements)
mlxtend/mlxtend/externals/signature_py27.py:181:0: R0205: Class '_void' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/externals/signature_py27.py:181:0: R0903: Too few public methods (0/2) (too-few-public-methods)
mlxtend/mlxtend/externals/signature_py27.py:185:0: R0205: Class '_empty' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/externals/signature_py27.py:185:0: R0903: Too few public methods (0/2) (too-few-public-methods)
mlxtend/mlxtend/externals/signature_py27.py:190:4: C0202: Class method __new__ should have 'cls' as first argument (bad-classmethod-argument)
mlxtend/mlxtend/externals/signature_py27.py:196:15: E1101: Instance of '_ParameterKind' has no '_name' member (no-member)
mlxtend/mlxtend/externals/signature_py27.py:199:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:199:48: E1101: Instance of '_ParameterKind' has no '_name' member (no-member)
mlxtend/mlxtend/externals/signature_py27.py:209:0: R0205: Class 'Parameter' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/externals/signature_py27.py:254:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:262:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/externals/signature_py27.py:268:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:279:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:283:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:287:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:330:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:334:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:337:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:347:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:351:4: E0309: __hash__ does not return int (invalid-hash-returned)
mlxtend/mlxtend/externals/signature_py27.py:352:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:368:0: R0205: Class 'BoundArguments' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/externals/signature_py27.py:385:23: W0621: Redefining name 'signature' from outer scope (line 54) (redefined-outer-name)
mlxtend/mlxtend/externals/signature_py27.py:390:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:394:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:397:62: W0212: Access to a protected member _partial_kwarg of a client class (protected-access)
mlxtend/mlxtend/externals/signature_py27.py:421:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:426:66: W0212: Access to a protected member _partial_kwarg of a client class (protected-access)
mlxtend/mlxtend/externals/signature_py27.py:450:4: E0309: __hash__ does not return int (invalid-hash-returned)
mlxtend/mlxtend/externals/signature_py27.py:451:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:465:0: R0205: Class 'Signature' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/externals/signature_py27.py:511:20: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
mlxtend/mlxtend/externals/signature_py27.py:524:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:534:4: R0914: Too many local variables (20/15) (too-many-locals)
mlxtend/mlxtend/externals/signature_py27.py:540:8: W0621: Redefining name 'Parameter' from outer scope (line 209) (redefined-outer-name)
mlxtend/mlxtend/externals/signature_py27.py:538:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:617:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:624:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/signature_py27.py:641:4: E0309: __hash__ does not return int (invalid-hash-returned)
mlxtend/mlxtend/externals/signature_py27.py:642:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:659:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/signature_py27.py:667:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/signature_py27.py:694:19: W0212: Access to a protected member _partial_kwarg of a client class (protected-access)
mlxtend/mlxtend/externals/signature_py27.py:712:20: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
mlxtend/mlxtend/externals/signature_py27.py:723:28: W0707: Consider explicitly re-raising using 'except StopIteration as exc' and 'raise TypeError(msg) from exc' (raise-missing-from)
mlxtend/mlxtend/externals/signature_py27.py:733:24: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
mlxtend/mlxtend/externals/signature_py27.py:739:28: W0707: Consider explicitly re-raising using 'except StopIteration as exc' and 'raise TypeError(msg) from exc' (raise-missing-from)
mlxtend/mlxtend/externals/signature_py27.py:742:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
mlxtend/mlxtend/externals/signature_py27.py:745:20: W0707: Consider explicitly re-raising using 'except StopIteration as exc' and 'raise TypeError('too many positional arguments') from exc' (raise-missing-from)
mlxtend/mlxtend/externals/signature_py27.py:763:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:778:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:800:20: W0707: Consider explicitly re-raising using 'except KeyError as exc' and 'raise TypeError('{arg!r} parameter lacking default value'.format(arg=param_name)) from exc' (raise-missing-from)
mlxtend/mlxtend/externals/signature_py27.py:801:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:680:4: R0912: Too many branches (28/12) (too-many-branches)
mlxtend/mlxtend/externals/signature_py27.py:680:4: R0915: Too many statements (70/50) (too-many-statements)
mlxtend/mlxtend/externals/signature_py27.py:852:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:856:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/signature_py27.py:833:12: W0612: Unused variable 'idx' (unused-variable)
************* Module mlxtend.externals.adjust_text
mlxtend/mlxtend/externals/adjust_text.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/externals/adjust_text.py:36:4: C0103: Class name "xrange" doesn't conform to PascalCase naming style (invalid-name)
mlxtend/mlxtend/externals/adjust_text.py:46:4: C0103: Variable name "transOffset" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/externals/adjust_text.py:47:14: W0212: Access to a protected member _offsets of a client class (protected-access)
mlxtend/mlxtend/externals/adjust_text.py:56:8: C0103: Variable name "transOffset" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/externals/adjust_text.py:75:26: E1101: Instance of 'Bbox' has no 'inverse_transformed' member (no-member)
mlxtend/mlxtend/externals/adjust_text.py:80:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:86:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:98:15: R1729: Use a generator instead 'all(isinstance(obj, matplotlib.transforms.BboxBase) for obj in objs)' (use-a-generator)
mlxtend/mlxtend/externals/adjust_text.py:86:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
mlxtend/mlxtend/externals/adjust_text.py:104:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:118:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:149:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:149:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:149:0: R0914: Too many local variables (24/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:178:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
mlxtend/mlxtend/externals/adjust_text.py:178:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:178:0: R0914: Too many local variables (32/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:231:28: R1728: Consider using a generator instead 'sum(abs(b.width * b.height) if b is not None else 0 for b in intersections)' (consider-using-generator)
mlxtend/mlxtend/externals/adjust_text.py:178:0: R0912: Too many branches (15/12) (too-many-branches)
mlxtend/mlxtend/externals/adjust_text.py:248:11: W0612: Unused variable 'value' (unused-variable)
mlxtend/mlxtend/externals/adjust_text.py:261:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:261:0: R0914: Too many local variables (29/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:262:54: W0613: Unused argument 'only_use_max_min' (unused-argument)
mlxtend/mlxtend/externals/adjust_text.py:313:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:313:0: R0914: Too many local variables (25/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:319:4: W0613: Unused argument 'only_use_max_min' (unused-argument)
mlxtend/mlxtend/externals/adjust_text.py:368:0: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:368:0: R0914: Too many local variables (22/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:409:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:409:0: R0914: Too many local variables (22/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:440:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/adjust_text.py:449:12: W0707: Consider explicitly re-raising using 'except TypeError as exc' and 'raise TypeError('Force values must be castable to floats') from exc' (raise-missing-from)
mlxtend/mlxtend/externals/adjust_text.py:453:0: W0102: Dangerous default value {} as argument (dangerous-default-value)
mlxtend/mlxtend/externals/adjust_text.py:453:0: R0913: Too many arguments (26/5) (too-many-arguments)
mlxtend/mlxtend/externals/adjust_text.py:453:0: R0914: Too many local variables (60/15) (too-many-locals)
mlxtend/mlxtend/externals/adjust_text.py:453:0: W1113: Keyword argument before variable positional arguments list in the definition of adjust_text function (keyword-arg-before-vararg)
mlxtend/mlxtend/externals/adjust_text.py:637:12: W0101: Unreachable code (unreachable)
mlxtend/mlxtend/externals/adjust_text.py:633:12: W0707: Consider explicitly re-raising using 'except ValueError as exc' and 'raise ValueError("Can't get bounding boxes from add_objects - is'                             it a flat list of matplotlib objects?") from exc' (raise-missing-from)
mlxtend/mlxtend/externals/adjust_text.py:646:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:670:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:677:13: E0606: Possibly using variable 'xrange' before assignment (possibly-used-before-assignment)
mlxtend/mlxtend/externals/adjust_text.py:738:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:738:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:771:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:771:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/adjust_text.py:453:0: R0912: Too many branches (50/12) (too-many-branches)
mlxtend/mlxtend/externals/adjust_text.py:453:0: R0915: Too many statements (117/50) (too-many-statements)
mlxtend/mlxtend/externals/adjust_text.py:453:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module mlxtend.externals.estimator_checks
mlxtend/mlxtend/externals/estimator_checks.py:68:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.externals.pyprind.generator_factory
mlxtend/mlxtend/externals/pyprind/generator_factory.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/externals/pyprind/generator_factory.py:12:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/externals/pyprind/generator_factory.py:13:4: W1113: Keyword argument before variable positional arguments list in the definition of generator_progress function (keyword-arg-before-vararg)
************* Module mlxtend.externals.pyprind.progpercent
mlxtend/mlxtend/externals/pyprind/progpercent.py:43:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/externals/pyprind/progpercent.py:62:16: E1101: Instance of 'Process' has no 'get_cpu_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/progpercent.py:63:16: E1101: Instance of 'Process' has no 'get_memory_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/progpercent.py:66:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/pyprind/progpercent.py:89:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.externals.pyprind.progbar
mlxtend/mlxtend/externals/pyprind/progbar.py:46:4: R0913: Too many arguments (9/5) (too-many-arguments)
mlxtend/mlxtend/externals/pyprind/progbar.py:70:16: E1101: Instance of 'Process' has no 'get_cpu_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/progbar.py:71:16: E1101: Instance of 'Process' has no 'get_memory_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/progbar.py:86:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/pyprind/progbar.py:105:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.externals.pyprind.prog_class
mlxtend/mlxtend/externals/pyprind/prog_class.py:21:4: C0103: Constant name "psutil_import" doesn't conform to UPPER_CASE naming style (invalid-name)
mlxtend/mlxtend/externals/pyprind/prog_class.py:23:4: C0103: Constant name "psutil_import" doesn't conform to UPPER_CASE naming style (invalid-name)
mlxtend/mlxtend/externals/pyprind/prog_class.py:26:0: C0115: Missing class docstring (missing-class-docstring)
mlxtend/mlxtend/externals/pyprind/prog_class.py:26:0: R0902: Too many instance attributes (19/7) (too-many-instance-attributes)
mlxtend/mlxtend/externals/pyprind/prog_class.py:27:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/externals/pyprind/prog_class.py:55:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
mlxtend/mlxtend/externals/pyprind/prog_class.py:57:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/externals/pyprind/prog_class.py:83:8: E1101: Instance of 'Prog' has no '_print' member (no-member)
mlxtend/mlxtend/externals/pyprind/prog_class.py:127:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
mlxtend/mlxtend/externals/pyprind/prog_class.py:141:8: W0107: Unnecessary pass statement (unnecessary-pass)
mlxtend/mlxtend/externals/pyprind/prog_class.py:144:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/pyprind/prog_class.py:159:12: E1101: Instance of 'Prog' has no 'last_progress' member (no-member)
mlxtend/mlxtend/externals/pyprind/prog_class.py:160:12: E1101: Instance of 'Prog' has no '_print' member (no-member)
mlxtend/mlxtend/externals/pyprind/prog_class.py:171:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/pyprind/prog_class.py:181:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/pyprind/prog_class.py:189:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/externals/pyprind/prog_class.py:195:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/externals/pyprind/prog_class.py:200:28: E1101: Instance of 'Process' has no 'get_cpu_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/prog_class.py:201:28: E1101: Instance of 'Process' has no 'get_memory_percent' member (no-member)
mlxtend/mlxtend/externals/pyprind/prog_class.py:203:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.data.multiplexer
mlxtend/mlxtend/data/multiplexer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/multiplexer.py:12:0: R0914: Too many local variables (20/15) (too-many-locals)
mlxtend/mlxtend/data/multiplexer.py:74:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/data/multiplexer.py:78:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/data/multiplexer.py:82:4: C0103: Variable name "X_pos" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/data/multiplexer.py:83:4: C0103: Variable name "X_neg" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/data/multiplexer.py:90:10: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/data/multiplexer.py:110:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/data/multiplexer.py:111:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/data/multiplexer.py:115:8: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.wine
mlxtend/mlxtend/data/wine.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/wine.py:54:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.three_blobs
mlxtend/mlxtend/data/three_blobs.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/three_blobs.py:37:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.local_mnist
mlxtend/mlxtend/data/local_mnist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/local_mnist.py:38:8: W0612: Unused variable 'magic' (unused-variable)
mlxtend/mlxtend/data/local_mnist.py:38:15: W0612: Unused variable 'n' (unused-variable)
mlxtend/mlxtend/data/local_mnist.py:41:15: W0612: Unused variable 'num' (unused-variable)
mlxtend/mlxtend/data/local_mnist.py:41:20: W0612: Unused variable 'rows' (unused-variable)
mlxtend/mlxtend/data/local_mnist.py:41:26: W0612: Unused variable 'cols' (unused-variable)
************* Module mlxtend.data
mlxtend/mlxtend/data/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.data.autompg
mlxtend/mlxtend/data/autompg.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/autompg.py:50:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.iris
mlxtend/mlxtend/data/iris.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/iris.py:73:8: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/data/iris.py:77:8: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.boston_housing
mlxtend/mlxtend/data/boston_housing.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/boston_housing.py:58:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.data.mnist
mlxtend/mlxtend/data/mnist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/data/mnist.py:37:4: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
************* Module mlxtend.classifier.logistic_regression
mlxtend/mlxtend/classifier/logistic_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/logistic_regression.py:16:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/logistic_regression.py:71:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/classifier/logistic_regression.py:92:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:97:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:103:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:115:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/classifier/logistic_regression.py:135:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:139:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:143:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/logistic_regression.py:107:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/logistic_regression.py:107:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/logistic_regression.py:112:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/logistic_regression.py:114:8: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.ensemble_vote
mlxtend/mlxtend/classifier/ensemble_vote.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/ensemble_vote.py:21:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/ensemble_vote.py:110:4: R0913: Too many arguments (7/5) (too-many-arguments)
mlxtend/mlxtend/classifier/ensemble_vote.py:120:26: R1721: Unnecessary use of a comprehension, use dict(_name_estimators(clfs)) instead. (unnecessary-comprehension)
mlxtend/mlxtend/classifier/ensemble_vote.py:127:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:152:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/ensemble_vote.py:157:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:162:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:172:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/ensemble_vote.py:183:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:189:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:127:4: R0912: Too many branches (15/12) (too-many-branches)
mlxtend/mlxtend/classifier/ensemble_vote.py:206:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:223:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/ensemble_vote.py:241:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:258:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/ensemble_vote.py:264:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:281:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/classifier/ensemble_vote.py:288:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/classifier/ensemble_vote.py:289:19: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
mlxtend/mlxtend/classifier/ensemble_vote.py:294:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:297:16: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
mlxtend/mlxtend/classifier/ensemble_vote.py:299:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/ensemble_vote.py:302:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:305:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
mlxtend/mlxtend/classifier/ensemble_vote.py:312:30: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/ensemble_vote.py:166:8: W0201: Attribute 'le_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/ensemble_vote.py:168:8: W0201: Attribute 'classes_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/ensemble_vote.py:177:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/ensemble_vote.py:179:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.stacking_cv_classification
mlxtend/mlxtend/classifier/stacking_cv_classification.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:27:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:27:0: R0902: Too many instance attributes (19/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:148:4: R0913: Too many arguments (15/5) (too-many-arguments)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:148:4: R0914: Too many local variables (16/15) (too-many-locals)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:172:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:188:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:191:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:225:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:250:25: R1735: Consider using '{"sample_weight": sample_weight}' instead of a call to 'dict'. (use-dict-literal)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:258:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:191:4: R0912: Too many branches (25/12) (too-many-branches)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:191:4: R0915: Too many statements (55/50) (too-many-statements)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:254:12: W0612: Unused variable 'n' (unused-variable)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:331:36: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:365:42: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:219:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:222:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:220:12: W0201: Attribute 'meta_clf_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:223:12: W0201: Attribute 'meta_clf_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:228:12: W0201: Attribute '_label_encoder' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:231:12: W0201: Attribute '_label_encoder' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:229:12: W0201: Attribute 'classes_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:232:12: W0201: Attribute 'classes_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_cv_classification.py:295:12: W0201: Attribute 'train_meta_features_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.perceptron
mlxtend/mlxtend/classifier/perceptron.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/perceptron.py:16:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/perceptron.py:65:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/perceptron.py:78:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/classifier/perceptron.py:95:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/perceptron.py:99:30: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/perceptron.py:102:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/perceptron.py:70:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/perceptron.py:70:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/perceptron.py:75:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/perceptron.py:77:8: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.stacking_classification
mlxtend/mlxtend/classifier/stacking_classification.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/stacking_classification.py:24:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
mlxtend/mlxtend/classifier/stacking_classification.py:24:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/stacking_classification.py:113:4: R0913: Too many arguments (11/5) (too-many-arguments)
mlxtend/mlxtend/classifier/stacking_classification.py:133:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_classification.py:145:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/classifier/stacking_classification.py:148:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/stacking_classification.py:171:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/stacking_classification.py:191:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_classification.py:197:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/stacking_classification.py:148:4: R0912: Too many branches (20/12) (too-many-branches)
mlxtend/mlxtend/classifier/stacking_classification.py:247:36: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/stacking_classification.py:176:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:179:12: W0201: Attribute 'clfs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:177:12: W0201: Attribute 'meta_clf_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:180:12: W0201: Attribute 'meta_clf_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:183:12: W0201: Attribute '_label_encoder' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:186:12: W0201: Attribute '_label_encoder' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:184:12: W0201: Attribute 'classes_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:187:12: W0201: Attribute 'classes_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/stacking_classification.py:215:12: W0201: Attribute 'train_meta_features_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier._base_classification
mlxtend/mlxtend/classifier/_base_classification.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/_base_classification.py:11:26: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/_base_classification.py:12:24: E1101: Instance of '_BaseStackingClassifier' has no 'predict_meta_features' member (no-member)
mlxtend/mlxtend/classifier/_base_classification.py:14:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
mlxtend/mlxtend/classifier/_base_classification.py:14:15: E1101: Instance of '_BaseStackingClassifier' has no 'use_features_in_secondary' member (no-member)
mlxtend/mlxtend/classifier/_base_classification.py:21:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/_base_classification.py:38:35: E1101: Instance of '_BaseStackingClassifier' has no 'meta_clf_' member (no-member)
mlxtend/mlxtend/classifier/_base_classification.py:40:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/_base_classification.py:58:35: E1101: Instance of '_BaseStackingClassifier' has no 'meta_clf_' member (no-member)
mlxtend/mlxtend/classifier/_base_classification.py:60:32: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/_base_classification.py:80:35: E1101: Instance of '_BaseStackingClassifier' has no 'meta_clf_' member (no-member)
************* Module mlxtend.classifier
mlxtend/mlxtend/classifier/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.classifier.softmax_regression
mlxtend/mlxtend/classifier/softmax_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/softmax_regression.py:18:0: R0902: Too many instance attributes (13/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/softmax_regression.py:74:4: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/classifier/softmax_regression.py:98:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:111:8: C0103: Variable name "L2_term" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:118:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:123:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:130:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:147:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/classifier/softmax_regression.py:177:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:193:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/softmax_regression.py:135:12: W0201: Attribute '_n_features' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/softmax_regression.py:137:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/softmax_regression.py:137:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/softmax_regression.py:142:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/softmax_regression.py:146:8: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.oner
mlxtend/mlxtend/classifier/oner.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/oner.py:64:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/oner.py:68:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/oner.py:68:4: R0914: Too many local variables (24/15) (too-many-locals)
mlxtend/mlxtend/classifier/oner.py:90:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/classifier/oner.py:99:33: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/oner.py:135:12: C0206: Consider iterating with .items() (consider-using-dict-items)
mlxtend/mlxtend/classifier/oner.py:142:16: C0206: Consider iterating with .items() (consider-using-dict-items)
mlxtend/mlxtend/classifier/oner.py:68:4: R0912: Too many branches (14/12) (too-many-branches)
mlxtend/mlxtend/classifier/oner.py:184:22: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/oner.py:201:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/classifier/oner.py:111:16: W0201: Attribute 'class_labels_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/oner.py:175:16: W0201: Attribute 'p_value_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/oner.py:180:8: W0201: Attribute 'feature_idx_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/oner.py:181:8: W0201: Attribute 'prediction_dict_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.adaline
mlxtend/mlxtend/classifier/adaline.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/adaline.py:16:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/adaline.py:61:4: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/classifier/adaline.py:75:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/adaline.py:93:19: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/classifier/adaline.py:116:31: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/adaline.py:118:8: C0103: Variable name "Xb" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/adaline.py:125:25: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/adaline.py:129:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/adaline.py:80:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/adaline.py:88:12: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/adaline.py:80:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/adaline.py:88:21: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/adaline.py:85:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/adaline.py:92:12: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.classifier.multilayerperceptron
mlxtend/mlxtend/classifier/multilayerperceptron.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/classifier/multilayerperceptron.py:17:0: R0902: Too many instance attributes (20/7) (too-many-instance-attributes)
mlxtend/mlxtend/classifier/multilayerperceptron.py:81:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
mlxtend/mlxtend/classifier/multilayerperceptron.py:81:4: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/classifier/multilayerperceptron.py:90:8: W0613: Unused argument 'dropout' (unused-argument)
mlxtend/mlxtend/classifier/multilayerperceptron.py:117:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:117:4: R0914: Too many local variables (29/15) (too-many-locals)
mlxtend/mlxtend/classifier/multilayerperceptron.py:150:15: E1101: Module 'numpy.random' has no 'RandomState' member (no-member)
mlxtend/mlxtend/classifier/multilayerperceptron.py:171:16: C0103: Variable name "grad_W_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:173:16: C0103: Variable name "grad_B_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:177:16: C0103: Variable name "grad_W_out" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:179:16: C0103: Variable name "grad_B_out" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:186:16: C0103: Variable name "dW_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:190:16: C0103: Variable name "dW_out" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:195:16: C0103: Variable name "dB_1" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:196:16: C0103: Variable name "dB_out" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:155:16: W0612: Unused variable 'net_1' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:155:30: W0612: Unused variable 'net_out' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:223:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:237:8: C0103: Variable name "L2_term" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:241:8: C0103: Variable name "L1_term" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:246:23: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:247:8: W0612: Unused variable 'net_1' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:247:15: W0612: Unused variable 'act_1' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:247:31: W0612: Unused variable 'act_out' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:260:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/classifier/multilayerperceptron.py:274:8: W0612: Unused variable 'net_1' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:274:15: W0612: Unused variable 'act_1' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:274:22: W0612: Unused variable 'net_out' (unused-variable)
mlxtend/mlxtend/classifier/multilayerperceptron.py:121:12: W0201: Attribute '_decr_eta' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:125:12: W0201: Attribute '_n_features' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:126:12: W0201: Attribute '_weight_maps' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:126:31: W0201: Attribute '_bias_maps' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:132:12: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:132:21: W0201: Attribute 'b_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:138:12: W0201: Attribute 'cost_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/classifier/multilayerperceptron.py:148:8: W0201: Attribute 'init_time_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.plotting.checkerboard
mlxtend/mlxtend/plotting/checkerboard.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/checkerboard.py:16:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/plotting/checkerboard.py:16:0: R0914: Too many local variables (20/15) (too-many-locals)
mlxtend/mlxtend/plotting/checkerboard.py:116:8: W0212: Access to a protected member _text of a client class (protected-access)
mlxtend/mlxtend/plotting/checkerboard.py:116:8: W0212: Access to a protected member _cells of a client class (protected-access)
************* Module mlxtend.plotting.learning_curves
mlxtend/mlxtend/plotting/learning_curves.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/learning_curves.py:14:4: C0103: Argument name "X_train" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/learning_curves.py:16:4: C0103: Argument name "X_test" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/learning_curves.py:13:0: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/plotting/learning_curves.py:13:0: R0914: Too many local variables (28/15) (too-many-locals)
mlxtend/mlxtend/plotting/learning_curves.py:78:8: C0415: Import outside toplevel (sklearn.metrics) (import-outside-toplevel)
mlxtend/mlxtend/plotting/learning_curves.py:99:26: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
mlxtend/mlxtend/plotting/learning_curves.py:143:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/learning_curves.py:146:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/learning_curves.py:150:20: W3301: Do not use nested call of 'max'; it's possible to do 'max(*test_errors, *training_errors)' instead (nested-min-max)
mlxtend/mlxtend/plotting/learning_curves.py:151:20: W3301: Do not use nested call of 'min'; it's possible to do 'min(*test_errors, *training_errors)' instead (nested-min-max)
************* Module mlxtend.plotting.plot_linear_regression
mlxtend/mlxtend/plotting/plot_linear_regression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/plot_linear_regression.py:17:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/plot_linear_regression.py:16:0: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/plotting/plot_linear_regression.py:16:0: R0914: Too many local variables (18/15) (too-many-locals)
mlxtend/mlxtend/plotting/plot_linear_regression.py:95:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/plot_linear_regression.py:97:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/plot_linear_regression.py:91:16: W0612: Unused variable 'p' (unused-variable)
************* Module mlxtend.plotting.scatter
mlxtend/mlxtend/plotting/scatter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/scatter.py:17:0: R0913: Too many arguments (9/5) (too-many-arguments)
mlxtend/mlxtend/plotting/scatter.py:17:0: R0914: Too many local variables (18/15) (too-many-locals)
************* Module mlxtend.plotting.remove_chartjunk
mlxtend/mlxtend/plotting/remove_chartjunk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.plotting.pca_correlation_graph
mlxtend/mlxtend/plotting/pca_correlation_graph.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:14:16: C0103: Argument name "A" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:14:19: C0103: Argument name "B" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:20:4: C0103: Variable name "A_mA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:21:4: C0103: Variable name "B_mB" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:24:4: C0103: Variable name "ssA" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:25:4: C0103: Variable name "ssB" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:31:29: C0103: Argument name "A" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:31:32: C0103: Argument name "B" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:31:35: C0103: Argument name "names_cols_A" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:31:49: C0103: Argument name "names_cols_B" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:52:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:56:4: C0103: Argument name "X_pca" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:51:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:51:0: R0914: Too many local variables (19/15) (too-many-locals)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:187:10: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/pca_correlation_graph.py:193:10: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.plotting.decision_regions
mlxtend/mlxtend/plotting/decision_regions.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/decision_regions.py:19:27: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:26:4: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
mlxtend/mlxtend/plotting/decision_regions.py:45:0: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/plotting/decision_regions.py:45:13: C0103: Argument name "X_predict" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:46:4: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:51:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:58:4: C0103: Argument name "X_highlight" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:50:0: R0913: Too many arguments (18/5) (too-many-arguments)
mlxtend/mlxtend/plotting/decision_regions.py:50:0: R0914: Too many local variables (60/15) (too-many-locals)
mlxtend/mlxtend/plotting/decision_regions.py:172:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
mlxtend/mlxtend/plotting/decision_regions.py:186:12: W0707: Consider explicitly re-raising using 'except ValueError as exc' and 'raise ValueError('Unable to unpack feature_index. Make sure feature_index only has two dimensions.') from exc' (raise-missing-from)
mlxtend/mlxtend/plotting/decision_regions.py:193:12: W0707: Consider explicitly re-raising using 'except IndexError as exc' and 'raise IndexError('feature_index values out of range. X.shape is {}, but feature_index is {}'.format(X.shape, feature_index)) from exc' (raise-missing-from)
mlxtend/mlxtend/plotting/decision_regions.py:194:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/decision_regions.py:225:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/decision_regions.py:232:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/decision_regions.py:264:8: C0103: Variable name "X_predict" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:266:8: C0103: Variable name "X_grid" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:267:8: C0103: Variable name "X_predict" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:275:8: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:276:8: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:283:8: C0103: Variable name "partQuant" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:292:8: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:294:8: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:295:8: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/decision_regions.py:50:0: R0912: Too many branches (44/12) (too-many-branches)
mlxtend/mlxtend/plotting/decision_regions.py:50:0: R0915: Too many statements (136/50) (too-many-statements)
mlxtend/mlxtend/plotting/decision_regions.py:282:15: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module mlxtend.plotting
mlxtend/mlxtend/plotting/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.plotting.stacked_barplot
mlxtend/mlxtend/plotting/stacked_barplot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/stacked_barplot.py:16:0: R0913: Too many arguments (6/5) (too-many-arguments)
************* Module mlxtend.plotting.heatmap
mlxtend/mlxtend/plotting/heatmap.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/heatmap.py:13:0: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/plotting/heatmap.py:13:0: R0914: Too many local variables (22/15) (too-many-locals)
mlxtend/mlxtend/plotting/heatmap.py:106:15: E1101: Module 'matplotlib.cm' has no 'viridis' member (no-member)
mlxtend/mlxtend/plotting/heatmap.py:13:0: R0912: Too many branches (16/12) (too-many-branches)
************* Module mlxtend.plotting.ecdf
mlxtend/mlxtend/plotting/ecdf.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/ecdf.py:13:0: R0913: Too many arguments (9/5) (too-many-arguments)
mlxtend/mlxtend/plotting/ecdf.py:15:4: W0613: Unused argument 'y_label' (unused-argument)
************* Module mlxtend.plotting.enrichment_plot
mlxtend/mlxtend/plotting/enrichment_plot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/enrichment_plot.py:17:0: R0913: Too many arguments (14/5) (too-many-arguments)
mlxtend/mlxtend/plotting/enrichment_plot.py:17:0: R0914: Too many local variables (27/15) (too-many-locals)
mlxtend/mlxtend/plotting/enrichment_plot.py:17:0: R0912: Too many branches (15/12) (too-many-branches)
************* Module mlxtend.plotting.scatter_hist
mlxtend/mlxtend/plotting/scatter_hist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/scatter_hist.py:11:0: R0914: Too many local variables (20/15) (too-many-locals)
mlxtend/mlxtend/plotting/scatter_hist.py:7:0: W0611: Unused numpy imported as np (unused-import)
mlxtend/mlxtend/plotting/scatter_hist.py:8:0: W0611: Unused pandas imported as pd (unused-import)
************* Module mlxtend.plotting.scatterplotmatrix
mlxtend/mlxtend/plotting/scatterplotmatrix.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/scatterplotmatrix.py:15:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/plotting/scatterplotmatrix.py:72:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/scatterplotmatrix.py:62:4: W0612: Unused variable 'num_examples' (unused-variable)
************* Module mlxtend.plotting.plot_sequential_feature_selection
mlxtend/mlxtend/plotting/plot_sequential_feature_selection.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/plot_sequential_feature_selection.py:12:0: R0913: Too many arguments (9/5) (too-many-arguments)
mlxtend/mlxtend/plotting/plot_sequential_feature_selection.py:12:0: R0914: Too many local variables (18/15) (too-many-locals)
mlxtend/mlxtend/plotting/plot_sequential_feature_selection.py:61:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/plotting/plot_sequential_feature_selection.py:84:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.plotting.plot_confusion_matrix
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:12:0: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:12:0: R0914: Too many local variables (23/15) (too-many-locals)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:98:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:114:15: E1101: Module 'matplotlib.cm' has no 'Blues' member (no-member)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:12:0: R0912: Too many branches (20/12) (too-many-branches)
mlxtend/mlxtend/plotting/plot_confusion_matrix.py:12:0: R0915: Too many statements (54/50) (too-many-statements)
************* Module mlxtend.feature_extraction.rbf_kernel_pca
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:51:8: C0103: Attribute name "copy_X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:81:8: C0103: Attribute name "X_projected_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:85:12: C0103: Attribute name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:15:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:46:4: W0231: __init__ method from base class '_BaseModel' is not called (super-init-not-called)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:54:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:74:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:90:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:113:8: C0103: Variable name "K" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:119:29: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:128:8: C0103: Variable name "K" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:131:8: C0103: Variable name "N" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:133:8: C0103: Variable name "K" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:80:8: W0201: Attribute 'e_vals_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:80:22: W0201: Attribute 'e_vecs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:81:8: W0201: Attribute 'X_projected_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:85:12: W0201: Attribute 'X_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/rbf_kernel_pca.py:87:12: W0201: Attribute 'X_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.feature_extraction
mlxtend/mlxtend/feature_extraction/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.feature_extraction.linear_discriminant_analysis
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:40:4: W0231: __init__ method from base class '_BaseModel' is not called (super-init-not-called)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:45:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:71:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:98:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:118:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:124:30: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:125:8: C0103: Variable name "S_W" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:131:12: C0103: Variable name "S_W" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:134:31: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:136:8: C0103: Variable name "S_B" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:141:12: C0103: Variable name "S_B" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:152:33: W0613: Unused argument 'eig_vals' (unused-argument)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:65:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:68:8: W0201: Attribute '_is_fitted' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:78:12: W0201: Attribute '_n_classes' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:80:12: W0201: Attribute '_n_classes' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:81:8: W0201: Attribute '_n_features' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:88:8: W0201: Attribute 'e_vals_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:88:22: W0201: Attribute 'e_vecs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/linear_discriminant_analysis.py:91:8: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.feature_extraction.principal_component_analysis
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:15:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:60:4: W0231: __init__ method from base class '_BaseModel' is not called (super-init-not-called)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:72:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:72:21: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:92:19: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:120:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:149:33: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:179:33: W0613: Unused argument 'eig_vals' (unused-argument)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:179:53: W0613: Unused argument 'whitening' (unused-argument)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:102:12: W0201: Attribute 'e_vals_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:104:12: W0201: Attribute 'e_vals_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:102:26: W0201: Attribute 'e_vecs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:104:26: W0201: Attribute 'e_vecs_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:106:8: W0201: Attribute 'w_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:114:8: W0201: Attribute 'e_vals_normalized_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_extraction/principal_component_analysis.py:117:8: W0201: Attribute 'loadings_' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.feature_extraction.base
mlxtend/mlxtend/feature_extraction/base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_extraction/base.py:12:0: R0205: Class '_BaseFeatureExtractor' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
mlxtend/mlxtend/feature_extraction/base.py:18:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_extraction/base.py:28:16: W0707: Consider explicitly re-raising using 'except AttributeError as exc' and 'raise ValueError('y must be a 1D array.') from exc' (raise-missing-from)
mlxtend/mlxtend/feature_extraction/base.py:12:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module mlxtend.text.tokenizer
mlxtend/mlxtend/text/tokenizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.text
mlxtend/mlxtend/text/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/text/__init__.py:13:0: C0413: Import "from .tokenizer import tokenizer_emoticons, tokenizer_words_and_emoticons" should be placed at the top of the module (wrong-import-position)
************* Module mlxtend.text.names
mlxtend/mlxtend/text/names.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/text/names.py:88:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/text/names.py:103:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module mlxtend.feature_selection.utilities
mlxtend/mlxtend/feature_selection/utilities.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_selection/utilities.py:45:14: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/utilities.py:44:0: R0913: Too many arguments (6/5) (too-many-arguments)
mlxtend/mlxtend/feature_selection/utilities.py:96:4: C0103: Variable name "IDX" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/utilities.py:115:16: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/utilities.py:138:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/utilities.py:142:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/utilities.py:1:0: W0611: Unused deepcopy imported from copy (unused-import)
************* Module mlxtend.feature_selection.column_selector
mlxtend/mlxtend/feature_selection/column_selector.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_selection/column_selector.py:44:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/column_selector.py:62:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/column_selector.py:81:15: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
mlxtend/mlxtend/feature_selection/column_selector.py:62:27: W0613: Unused argument 'y' (unused-argument)
mlxtend/mlxtend/feature_selection/column_selector.py:103:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/column_selector.py:103:18: W0613: Unused argument 'X' (unused-argument)
mlxtend/mlxtend/feature_selection/column_selector.py:103:21: W0613: Unused argument 'y' (unused-argument)
************* Module mlxtend.feature_selection
mlxtend/mlxtend/feature_selection/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module mlxtend.feature_selection.sequential_feature_selector
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:300:0: C0301: Line too long (123/100) (line-too-long)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:252:8: C0103: Attribute name "_TESTING_INTERRUPT_MODE" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:27:0: R0902: Too many instance attributes (32/7) (too-many-instance-attributes)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:185:4: R0913: Too many arguments (13/5) (too-many-arguments)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:280:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:304:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:304:4: R0914: Too many local variables (33/15) (too-many-locals)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:339:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:418:8: C0103: Variable name "features_encoded_by_groupID" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:446:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:611:24: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:624:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:628:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:304:4: R0912: Too many branches (51/12) (too-many-branches)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:304:4: R0915: Too many statements (142/50) (too-many-statements)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:653:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:657:16: R1716: Simplify chained comparison between the operands (chained-comparison)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:675:30: E0606: Possibly using variable 'best_subset' before assignment (possibly-used-before-assignment)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:653:4: R1711: Useless return at end of function or method (useless-return)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:708:8: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:704:4: R0913: Too many arguments (8/5) (too-many-arguments)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:704:4: R0914: Too many local variables (23/15) (too-many-locals)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:806:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:823:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:826:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:892:26: W0212: Access to a protected member _ppf of a client class (protected-access)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:898:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:332:8: W0201: Attribute 'subsets_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:698:8: W0201: Attribute 'subsets_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:335:8: W0201: Attribute 'k_feature_idx_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:696:8: W0201: Attribute 'k_feature_idx_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:336:8: W0201: Attribute 'k_feature_names_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:698:23: W0201: Attribute 'k_feature_names_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:337:8: W0201: Attribute 'k_score_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:697:8: W0201: Attribute 'k_score_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:339:12: W0201: Attribute 'feature_names' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:340:8: W0201: Attribute 'n_features' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:342:8: W0201: Attribute 'feature_names_to_idx_mapper' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:344:12: W0201: Attribute 'feature_names_to_idx_mapper' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:348:8: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:350:12: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:365:12: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:375:8: W0201: Attribute 'feature_groups_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:377:12: W0201: Attribute 'feature_groups_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:407:12: W0201: Attribute 'feature_groups_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:424:8: W0201: Attribute 'fixed_features_group_set' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:437:8: W0201: Attribute 'k_lb' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:438:8: W0201: Attribute 'k_ub' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:489:8: W0201: Attribute 'is_parsimonious' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:497:16: W0201: Attribute 'is_parsimonious' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:505:8: W0201: Attribute 'min_k' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/sequential_feature_selector.py:506:8: W0201: Attribute 'max_k' defined outside __init__ (attribute-defined-outside-init)
************* Module mlxtend.feature_selection.exhaustive_feature_selector
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: C0114: Missing module docstring (missing-module-docstring)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:238:8: C0103: Attribute name "_TESTING_INTERRUPT_MODE" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:28:0: R0902: Too many instance attributes (26/7) (too-many-instance-attributes)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:168:4: R0913: Too many arguments (12/5) (too-many-arguments)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:227:25: R1721: Unnecessary use of a comprehension, use dict(_name_estimators([self.estimator])) instead. (unnecessary-comprehension)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:240:18: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:240:4: R0914: Too many local variables (31/15) (too-many-locals)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:356:12: W0622: Redefining built-in 'id' (redefined-builtin)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:274:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:355:8: C0103: Variable name "features_encoded_by_groupID" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:466:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:240:4: R0912: Too many branches (26/12) (too-many-branches)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:240:4: R0915: Too many statements (84/50) (too-many-statements)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:485:4: C0116: Missing function or method docstring (missing-function-docstring)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:492:39: E0606: Possibly using variable 'best_subset' before assignment (possibly-used-before-assignment)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:485:4: R1711: Useless return at end of function or method (useless-return)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:500:24: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:517:8: C0103: Variable name "X_" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:520:28: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:583:26: W0212: Access to a protected member _ppf of a client class (protected-access)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:589:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:267:8: W0201: Attribute 'subsets_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:494:8: W0201: Attribute 'subsets_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:270:8: W0201: Attribute 'best_idx_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:492:8: W0201: Attribute 'best_idx_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:271:8: W0201: Attribute 'best_feature_names_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:494:23: W0201: Attribute 'best_feature_names_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:272:8: W0201: Attribute 'best_score_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:493:8: W0201: Attribute 'best_score_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:274:12: W0201: Attribute 'feature_names' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:275:8: W0201: Attribute 'n_features' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:277:8: W0201: Attribute 'feature_names_to_idx_mapper' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:279:12: W0201: Attribute 'feature_names_to_idx_mapper' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:283:8: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:285:12: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:300:12: W0201: Attribute 'fixed_features_' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:361:8: W0201: Attribute 'fixed_features_group_set' defined outside __init__ (attribute-defined-outside-init)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[273:303]
==mlxtend.feature_selection.sequential_feature_selector:[338:368]
        X_, self.feature_names = _preprocess(X)
        self.n_features = X_.shape[1]

        self.feature_names_to_idx_mapper = None
        if self.feature_names is not None:
            self.feature_names_to_idx_mapper = {
                name: idx for idx, name in enumerate(self.feature_names)
            }

        self.fixed_features_ = self.fixed_features
        if self.fixed_features_ is None:
            self.fixed_features_ = tuple()

        fixed_feature_types = {type(i) for i in self.fixed_features_}
        if len(fixed_feature_types) > 1:
            raise ValueError(
                f"fixed_features values must have the same type. Found {fixed_feature_types}."
            )

        if len(self.fixed_features_) > 0 and isinstance(self.fixed_features_[0], str):
            if self.feature_names_to_idx_mapper is None:
                raise ValueError(
                    "The input X does not contain name of features provived in"
                    " `fixed_features`. Try passing input X as pandas DataFrames."
                )

            self.fixed_features_ = tuple(
                self.feature_names_to_idx_mapper[name] for name in self.fixed_features_
            )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[201:226]
==mlxtend.feature_selection.sequential_feature_selector:[219:244]
        self.clone_estimator = clone_estimator
        if self.clone_estimator:
            self.est_ = clone(self.estimator)
        else:
            self.est_ = self.estimator

        self.scoring = scoring
        if self.scoring is None:
            if not hasattr(self.est_, "_estimator_type"):
                raise AttributeError(
                    "Estimator must have an ._estimator_type for infering `scoring`"
                )

            if self.est_._estimator_type == "classifier":
                self.scoring = "accuracy"
            elif self.est_._estimator_type == "regressor":
                self.scoring = "r2"
            else:
                raise AttributeError("Estimator must be a Classifier or Regressor.")

        if isinstance(self.scoring, str):
            self.scorer = get_scorer(self.scoring)
        else:
            self.scorer = self.scoring
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[542:588]
==mlxtend.feature_selection.sequential_feature_selector:[851:897]
        self.fit(X, y, groups=groups, **fit_params)
        return self.transform(X)

    def get_metric_dict(self, confidence_interval=0.95):
        """Return metric dictionary

        Parameters
        ----------
        confidence_interval : float (default: 0.95)
            A positive float between 0.0 and 1.0 to compute the confidence
            interval bounds of the CV score averages.

        Returns
        ----------
        Dictionary with items where each dictionary value is a list
        with the number of iterations (number of feature subsets) as
        its length. The dictionary keys corresponding to these lists
        are as follows:
            'feature_idx': tuple of the indices of the feature subset
            'cv_scores': list with individual CV scores
            'avg_score': of CV average scores
            'std_dev': standard deviation of the CV score average
            'std_err': standard error of the CV score average
            'ci_bound': confidence interval bound of the CV score average

        """
        self._check_fitted()
        fdict = deepcopy(self.subsets_)
        for k in fdict:
            std_dev = np.std(self.subsets_[k]["cv_scores"])
            bound, std_err = self._calc_confidence(
                self.subsets_[k]["cv_scores"], confidence=confidence_interval
            )
            fdict[k]["ci_bound"] = bound
            fdict[k]["std_dev"] = std_dev
            fdict[k]["std_err"] = std_err
        return fdict

    def _calc_confidence(self, ary, confidence=0.95):
        std_err = scipy.stats.sem(ary)
        bound = std_err * sp.stats.t._ppf((1 + confidence) / 2.0, len(ary))
        return bound, std_err

    def _check_fitted(self):
        if not self.fitted:
            raise AttributeError( (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[468:486]
==mlxtend.feature_selection.sequential_feature_selector:[636:654]
                if self._TESTING_INTERRUPT_MODE:  # this is just for testing
                    self.finalize_fit()
                    raise KeyboardInterrupt

        except KeyboardInterrupt:
            self.interrupted_ = True
            sys.stderr.write("\nSTOPPING EARLY DUE TO KEYBOARD INTERRUPT...")

        if self.interrupted_:
            self.fitted = False
        else:
            self.fitted = True  # the completion of sequential selection process.
            self.finalize_fit()

        return self

    def finalize_fit(self):
        max_score = np.NINF (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.adaline:[69:86]
==mlxtend.classifier.perceptron:[59:76]
        self.epochs = epochs
        self.random_seed = random_seed
        self.print_progress = print_progress
        self._is_fitted = False

    def _fit(self, X, y, init_params=True):
        self._check_target_array(y, allowed={(0, 1)})
        y_data = np.where(y == 0, -1.0, 1.0)

        if init_params:
            self.b_, self.w_ = self._init_params(
                weights_shape=(X.shape[1], 1),
                bias_shape=(1,),
                random_seed=self.random_seed,
            )
            self.cost_ = []
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend._base._classifier:[74:103]
==mlxtend._base._regressor:[41:70]
        self._is_fitted = False
        self._check_arrays(X=X, y=y)
        self._check_target_array(y)
        if hasattr(self, "self.random_seed") and self.random_seed:
            self._rgen = np.random.RandomState(self.random_seed)
        self._init_time = time()
        self._fit(X=X, y=y, init_params=init_params)
        self._is_fitted = True
        return self

    def predict(self, X):
        """Predict targets from X.

        Parameters
        ----------
        X : {array-like, sparse matrix}, shape = [n_samples, n_features]
            Training vectors, where n_samples is the number of samples and
            n_features is the number of features.

        Returns
        ----------
        target_values : array-like, shape = [n_samples]
          Predicted target values.

        """
        self._check_arrays(X=X)
        if not self._is_fitted:
            raise AttributeError("Model is not fitted, yet.")
        return self._predict(X) (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.f_test:[186:202]
==mlxtend.evaluate.ttest:[306:321]
        estimator1.fit(X_1, y_1)
        estimator2.fit(X_1, y_1)
        est1_score = scorer(estimator1, X_2, y_2)
        est2_score = scorer(estimator2, X_2, y_2)
        score_diff = est1_score - est2_score
        return score_diff

    for i in range(5):
        randint = rng.randint(low=0, high=32767)
        X_1, X_2, y_1, y_2 = train_test_split(X, y, test_size=0.5, random_state=randint)

        score_diff_1 = score_diff(X_1, X_2, y_1, y_2)
        score_diff_2 = score_diff(X_2, X_1, y_2, y_1)
        score_mean = (score_diff_1 + score_diff_2) / 2.0
        score_var = (score_diff_1 - score_mean) ** 2 + (score_diff_2 - score_mean) ** 2 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.cochrans_q:[40:59]
==mlxtend.evaluate.f_test:[42:60]
    num_models = len(y_model_predictions)

    # Checks
    model_lens = set()
    y_model_predictions = list(y_model_predictions)
    for ary in [y_target] + y_model_predictions:
        if len(ary.shape) != 1:
            raise ValueError("One or more input arrays are not 1-dimensional.")
        model_lens.add(ary.shape[0])

    if len(model_lens) > 1:
        raise ValueError(
            "Each prediction array must have the " "same number of samples."
        )

    if num_models < 2:
        raise ValueError("Provide at least 2 model prediction arrays.")

    # Q test statistic (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[184:199]
==mlxtend.feature_selection.sequential_feature_selector:[203:217]
        self.pre_dispatch = pre_dispatch
        # Want to raise meaningful error message if a
        # cross-validation generator is inputted
        if isinstance(cv, types.GeneratorType):
            err_msg = (
                "Input cv is a generator object, which is not "
                "supported. Instead please input an iterable yielding "
                "train, test splits. This can usually be done by "
                "passing a cross-validation generator to the "
                "built-in list function. I.e. cv=list(<cv-generator>)"
            )
            raise TypeError(err_msg)
        self.cv = cv
        self.n_jobs = n_jobs (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.f_test:[168:182]
==mlxtend.evaluate.ttest:[89:103]
    rng = np.random.RandomState(random_seed)

    if scoring is None:
        if estimator1._estimator_type == "classifier":
            scoring = "accuracy"
        elif estimator1._estimator_type == "regressor":
            scoring = "r2"
        else:
            raise AttributeError("Estimator must " "be a Classifier or Regressor.")
    if isinstance(scoring, str):
        scorer = get_scorer(scoring)
    else:
        scorer = scoring
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend._base._base_model:[22:34]
==mlxtend.evaluate.bootstrap_point632:[17:29]
        if isinstance(X, list):
            raise ValueError("X must be a numpy array")
        if not len(X.shape) == 2:
            raise ValueError("X must be a 2D array. Try X[:, numpy.newaxis]")
        try:
            if y is None:
                return
        except AttributeError:
            if not len(y.shape) == 1:
                raise ValueError("y must be a 1D array.")

        if not len(y) == X.shape[0]: (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.f_test:[170:182]
==mlxtend.evaluate.ttest:[199:211]
    if scoring is None:
        if estimator1._estimator_type == "classifier":
            scoring = "accuracy"
        elif estimator1._estimator_type == "regressor":
            scoring = "r2"
        else:
            raise AttributeError("Estimator must " "be a Classifier or Regressor.")
    if isinstance(scoring, str):
        scorer = get_scorer(scoring)
    else:
        scorer = scoring
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.plotting.heatmap:[154:165]
==mlxtend.plotting.plot_confusion_matrix:[171:182]
    if hide_spines:
        ax.spines["right"].set_visible(False)
        ax.spines["top"].set_visible(False)
        ax.spines["left"].set_visible(False)
        ax.spines["bottom"].set_visible(False)
    ax.yaxis.set_ticks_position("left")
    ax.xaxis.set_ticks_position("bottom")
    if hide_ticks:
        ax.axes.get_yaxis().set_ticks([])
        ax.axes.get_xaxis().set_ticks([])
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.logistic_regression:[105:116]
==mlxtend.classifier.perceptron:[68:79]
        if init_params:
            self.b_, self.w_ = self._init_params(
                weights_shape=(X.shape[1], 1),
                bias_shape=(1,),
                random_seed=self.random_seed,
            )
            self.cost_ = []

        self.init_time_ = time()
        rgen = np.random.RandomState(self.random_seed)
        for i in range(self.epochs): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.regressor.stacking_cv_regression:[235:248]
==mlxtend.regressor.stacking_regression:[181:195]
        if not self.use_features_in_secondary:
            # meta model uses the prediction outcomes only
            pass
        elif sparse.issparse(X):
            meta_features = sparse.hstack((X, meta_features))
        else:
            meta_features = np.hstack((X, meta_features))

        if sample_weight is None:
            self.meta_regr_.fit(meta_features, y)
        else:
            self.meta_regr_.fit(meta_features, y, sample_weight=sample_weight)

        # save meta-features for training data (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.fpgrowth:[72:85]
==mlxtend.frequent_patterns.fpmax:[74:87]
    fpc.valid_input_check(df)

    if min_support <= 0.0:
        raise ValueError(
            "`min_support` must be a positive "
            "number within the interval `(0, 1]`. "
            "Got %s." % min_support
        )

    colname_map = None
    if use_colnames:
        colname_map = {idx: item for idx, item in enumerate(df.columns)}
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.cochrans_q:[43:55]
==mlxtend.evaluate.mcnemar:[126:138]
    model_lens = set()
    y_model_predictions = list(y_model_predictions)
    for ary in [y_target] + y_model_predictions:
        if len(ary.shape) != 1:
            raise ValueError("One or more input arrays are not 1-dimensional.")
        model_lens.add(ary.shape[0])

    if len(model_lens) > 1:
        raise ValueError(
            "Each prediction array must have the " "same number of samples."
        )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.cochrans_q:[72:86]
==mlxtend.evaluate.f_test:[78:92]
    )

    # denominator
    binary_combin = list(itertools.product([0, 1], repeat=num_models))
    ary = np.hstack(
        [(y_target == mod).reshape(-1, 1) for mod in y_model_predictions]
    ).astype(int)
    correctly_classified_objects = 0
    binary_combin_totals = np.zeros(len(binary_combin))
    for i, c in enumerate(binary_combin):
        binary_combin_totals[i] = ((ary == c).sum(axis=1) == num_models).sum()

        correctly_classified_objects += sum(c) ** 2 * binary_combin_totals[i]
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[125:136]
==mlxtend.classifier.stacking_cv_classification:[164:175]
        self.classifiers = classifiers
        self.meta_classifier = meta_classifier
        self.use_probas = use_probas

        allowed = {None, "first", "last"}
        if drop_proba_col not in allowed:
            raise ValueError(
                "`drop_proba_col` must be in %s. Got %s" % (allowed, drop_proba_col)
            )

        self.drop_proba_col = drop_proba_col (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[213:224]
==mlxtend.regressor.stacking_cv_regression:[231:243]
        if self.store_train_meta_features:
            self.train_meta_features_ = meta_features

        if not self.use_features_in_secondary:
            pass
        elif sparse.issparse(X):
            meta_features = sparse.hstack((X, meta_features))
        else:
            meta_features = np.hstack((X, meta_features))

        if sample_weight is None: (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.fpcommon:[13:27]
==mlxtend.frequent_patterns.hmine:[88:99]
    is_sparse = False
    if hasattr(df, "sparse"):
        # DataFrame with SparseArray (pandas >= 0.24)
        if df.size == 0:
            itemsets = df.values
        else:
            itemsets = df.sparse.to_coo().tocsr()
            is_sparse = True
    else:
        # dense DataFrame
        itemsets = df.values (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[327:336]
==mlxtend.feature_selection.sequential_feature_selector:[393:402]
            if self.feature_names_to_idx_mapper is None:
                raise ValueError(
                    "The input X does not contain name of features provived in"
                    " `feature_groups`. Try passing input X as pandas DataFrames"
                    " in which the name of features match the ones provided in"
                    " `feature_groups`"
                )

            lst = [] (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[223:261]
==mlxtend.classifier.stacking_cv_classification:[307:345]
        if sample_weight is None:
            self.meta_clf_.fit(meta_features, y)
        else:
            self.meta_clf_.fit(meta_features, y, sample_weight=sample_weight)

        return self

    def get_params(self, deep=True):
        """Return estimator parameter names for GridSearch support."""
        return self._get_params("named_classifiers", deep=deep)

    def set_params(self, **params):
        """Set the parameters of this estimator.

        Valid parameter keys can be listed with ``get_params()``.

        Returns
        -------
        self
        """
        self._set_params("classifiers", "named_classifiers", **params)
        return self

    def predict_meta_features(self, X):
        """Get meta-features of test-data.

        Parameters
        ----------
        X : numpy array, shape = [n_samples, n_features]
            Test vectors, where n_samples is the number of samples and
            n_features is the number of features.

        Returns
        -------
        meta-features : numpy array, shape = [n_samples, n_classifiers]
            Returns the meta-features for test data.

        """ (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.ensemble_vote:[189:200]
==mlxtend.classifier.stacking_classification:[197:207]
                        % (i, _name_estimators((clf,))[0][0], i, len(self.clfs_))
                    )

                if self.verbose > 2:
                    if hasattr(clf, "verbose"):
                        clf.set_params(verbose=self.verbose - 2)

                if self.verbose > 1:
                    print(_name_estimators((clf,))[0][1])

                if sample_weight is None: (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.confusion_matrix:[40:49]
==mlxtend.evaluate.scoring:[102:112]
    if not isinstance(y_target, np.ndarray):
        targ_tmp = np.asarray(y_target)
    else:
        targ_tmp = y_target
    if not isinstance(y_predicted, np.ndarray):
        pred_tmp = np.asarray(y_predicted)
    else:
        pred_tmp = y_predicted
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[364:372]
==mlxtend.feature_selection.sequential_feature_selector:[428:436]
        )
        if n_fixed_features_expected != len(self.fixed_features_):
            raise ValueError(
                "For each feature specified in the `fixed feature`, its group-mates"
                "must be specified as `fix_features` as well when `feature_groups`"
                "is provided."
            )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.plotting.decision_regions:[354:361]
==mlxtend.plotting.heatmap:[154:161]
    if hide_spines:
        ax.spines["right"].set_visible(False)
        ax.spines["top"].set_visible(False)
        ax.spines["left"].set_visible(False)
        ax.spines["bottom"].set_visible(False)
    ax.yaxis.set_ticks_position("left")
    ax.xaxis.set_ticks_position("bottom") (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.multilayerperceptron:[145:154]
==mlxtend.classifier.softmax_regression:[143:152]
        y_enc = self._one_hot(y=y, n_labels=self.n_classes, dtype=np.float_)

        self.init_time_ = time()

        rgen = np.random.RandomState(self.random_seed)
        for i in range(self.epochs):
            for idx in self._yield_minibatches_idx(
                rgen=rgen, n_batches=self.minibatches, data_ary=y, shuffle=True
            ): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.externals.pyprind.progbar:[64:71]
==mlxtend.externals.pyprind.progpercent:[56:65]
        if monitor:
            try:
                self.process.cpu_percent()
                self.process.memory_percent()
            except AttributeError:  # old version of psutil
                self.process.get_cpu_percent()
                self.process.get_memory_percent() (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.adaline:[117:129]
==mlxtend.regressor.linear_regression:[152:164]
        Xb = np.hstack((np.ones((X.shape[0], 1)), X))
        w = np.zeros(X.shape[1])
        z = np.linalg.inv(np.dot(Xb.T, Xb))
        params = np.dot(z, np.dot(Xb.T, y))
        b, w = np.array([params[0]]), params[1:].reshape(X.shape[1], 1)
        return b, w

    def _net_input(self, X):
        """Compute the linear net input."""
        return (np.dot(X, self.w_) + self.b_).flatten()

    def _predict(self, X): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.logistic_regression:[105:113]
==mlxtend.regressor.linear_regression:[104:113]
        if init_params:
            self.b_, self.w_ = self._init_params(
                weights_shape=(X.shape[1], 1),
                bias_shape=(1,),
                random_seed=self.random_seed,
            )
            self.cost_ = []

        # Direct analytical method (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[216:224]
==mlxtend.regressor.stacking_regression:[181:190]
        if not self.use_features_in_secondary:
            pass
        elif sparse.issparse(X):
            meta_features = sparse.hstack((X, meta_features))
        else:
            meta_features = np.hstack((X, meta_features))

        if sample_weight is None: (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.regressor.stacking_cv_regression:[187:195]
==mlxtend.regressor.stacking_regression:[141:149]
        X, y = check_X_y(
            X,
            y,
            accept_sparse=["csc", "csr"],
            dtype=None,
            multi_output=self.multi_output,
        )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.fpmax:[74:83]
==mlxtend.frequent_patterns.hmine:[78:86]
    fpc.valid_input_check(df)

    if min_support <= 0.0:
        raise ValueError(
            "`min_support` must be a positive "
            "number within the interval `(0, 1]`. "
            "Got %s." % min_support
        )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.fpcommon:[193:202]
==mlxtend.frequent_patterns.fpmax:[149:158]
        if len(itemset) == 0:
            return

        # Follow existing path in tree as long as possible
        index = 0
        node = self.root
        for item in itemset:
            if item in node.children:
                child = node.children[item] (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[181:188]
==mlxtend.classifier.stacking_cv_classification:[226:233]
        if y.ndim > 1:
            self._label_encoder = [LabelEncoder().fit(yk) for yk in y.T]
            self.classes_ = [le.classes_ for le in self._label_encoder]
        else:
            self._label_encoder = LabelEncoder().fit(y)
            self.classes_ = self._label_encoder.classes_
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.stacking_classification:[174:181]
==mlxtend.classifier.stacking_cv_classification:[217:223]
        if self.use_clones:
            self.clfs_ = clone(self.classifiers)
            self.meta_clf_ = clone(self.meta_classifier)
        else:
            self.clfs_ = self.classifiers
            self.meta_clf_ = self.meta_classifier (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.externals.pyprind.progbar:[101:107]
==mlxtend.externals.pyprind.progpercent:[85:91]
                self._cache_eta()
            if self.item_id:
                self._cache_item_id()
            self._stream_out("\r%s" % self._cached_output)
            self._stream_flush()
            self._cached_output = "" (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.logistic_regression:[113:119]
==mlxtend.regressor.linear_regression:[117:123]
        self.init_time_ = time()
        rgen = np.random.RandomState(self.random_seed)
        for i in range(self.epochs):
            for idx in self._yield_minibatches_idx(
                rgen=rgen, n_batches=self.minibatches, data_ary=y, shuffle=True
            ): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.regressor.stacking_cv_regression:[280:305]
==mlxtend.regressor.stacking_regression:[261:267]
        if not self.use_features_in_secondary:
            return self.meta_regr_.predict(meta_features)
        elif sparse.issparse(X):
            return self.meta_regr_.predict(sparse.hstack((X, meta_features)))
        else:
            return self.meta_regr_.predict(np.hstack((X, meta_features))) (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.apriori:[233:240]
==mlxtend.frequent_patterns.fpmax:[76:83]
    if min_support <= 0.0:
        raise ValueError(
            "`min_support` must be a positive "
            "number within the interval `(0, 1]`. "
            "Got %s." % min_support
        )
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend._base._classifier:[81:103]
==mlxtend._base._cluster:[41:63]
        self._is_fitted = True
        return self

    def predict(self, X):
        """Predict targets from X.

        Parameters
        ----------
        X : {array-like, sparse matrix}, shape = [n_samples, n_features]
            Training vectors, where n_samples is the number of samples and
            n_features is the number of features.

        Returns
        ----------
        target_values : array-like, shape = [n_samples]
          Predicted target values.

        """
        self._check_arrays(X=X)
        if not self._is_fitted:
            raise AttributeError("Model is not fitted, yet.")
        return self._predict(X) (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.evaluate.bootstrap_point632:[21:28]
==mlxtend.feature_extraction.base:[22:29]
    try:
        if y is None:
            return
    except AttributeError:
        if not len(y.shape) == 1:
            raise ValueError("y must be a 1D array.")
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_selection.exhaustive_feature_selector:[230:266]
==mlxtend.feature_selection.sequential_feature_selector:[244:260]
        self.fixed_features = fixed_features
        self.feature_groups = feature_groups

        self.fitted = False
        self.interrupted_ = False

        # don't mess with this unless testing
        self._TESTING_INTERRUPT_MODE = False

    def fit(self, X, y, groups=None, **fit_params):
        """Perform feature selection and learn model from training data.

        Parameters
        ----------
        X : {array-like, sparse matrix}, shape = [n_samples, n_features]
            Training vectors, where n_samples is the number of samples and
            n_features is the number of features.
            New in v 0.13.0: pandas DataFrames are now also accepted as
            argument for X.

        y : array-like, shape = [n_samples]
            Target values.

        groups : array-like, with shape (n_samples,), optional
            Group labels for the samples used while splitting the dataset into
            train/test set. Passed to the fit method of the cross-validator.

        fit_params : dict of string -> object, optional
            Parameters to pass to to the fit method of classifier.

        Returns
        -------
        self : object

        """
 (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.feature_extraction.principal_component_analysis:[85:92]
==mlxtend.feature_extraction.rbf_kernel_pca:[67:74]
        self._is_fitted = False
        self._check_arrays(X=X)
        self._fit(X=X)
        self._is_fitted = True
        return self

    def _fit(self, X): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.logistic_regression:[79:85]
==mlxtend.classifier.perceptron:[54:60]
        _BaseModel.__init__(self)
        _IterativeModel.__init__(self)
        _Classifier.__init__(self)

        self.eta = eta
        self.epochs = epochs (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.externals.pyprind.progbar:[91:96]
==mlxtend.externals.pyprind.progpercent:[71:76]
        if self.update_interval:
            do_update = time.time() - self.last_time >= self.update_interval
        elif force_flush:
            do_update = True
        else: (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.classifier.multilayerperceptron:[110:117]
==mlxtend.regressor.linear_regression:[81:86]
        self.epochs = epochs
        self.minibatches = minibatches
        self.random_seed = random_seed
        self.print_progress = print_progress
        self._is_fitted = False

    def _fit(self, X, y, init_params=True): (duplicate-code)
mlxtend/mlxtend/feature_selection/exhaustive_feature_selector.py:1:0: R0801: Similar lines in 2 files
==mlxtend.frequent_patterns.fpcommon:[203:210]
==mlxtend.frequent_patterns.fpmax:[158:165]
                node = child
                index += 1
            else:
                break

        # Insert any remaining items
        for item in itemset[index:]: (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 7.19/10 (previous run: 7.19/10, +0.00)

